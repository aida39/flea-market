version: 2.1
jobs:
  build_and_test:
    working_directory: ~/project/src
    docker:
      - image: cimg/php:8.1
      - image: cimg/mysql:8.0.27
        environment:
          MYSQL_DATABASE: laravel_db
          MYSQL_USER: laravel_user
          MYSQL_PASSWORD: laravel_pass

    steps:
      - checkout:
          path: ~/project

      # PHP拡張機能のインストール
      - run:
          name: Install PHP extensions and dependencies
          command: |
            apt update && apt install -y default-mysql-client zlib1g-dev libzip-dev unzip libpng-dev libjpeg-dev
            docker-php-ext-configure gd --with-jpeg
            docker-php-ext-install pdo_mysql zip gd

      - run:
          name: composer依存関係をインストール
          command: |
            curl -sS https://getcomposer.org/installer | php
            mv composer.phar /usr/local/bin/composer
            composer self-update

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package-lock.json" }}
            - node-v1-

      - run:
          name: node_modules依存関係をインストール
          command: npm install

      - save_cache:
          key: node-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # .envファイルの作成
      - run:
          name: Create .env file
          command: |
            echo "DB_CONNECTION=mysql" >> src/.env
            echo "DB_HOST=127.0.0.1" >> src/.env
            echo "DB_PORT=3306" >> src/.env
            echo "DB_DATABASE=laravel_db" >> src/.env
            echo "DB_USERNAME=laravel_user" >> src/.env
            echo "DB_PASSWORD=laravel_pass" >> src/.env
            ls -l src/.env
            cat src/.env

      - run:
          name: マイグレーションを実行
          command: php artisan migrate --env=testing --seed  --force

      - run: mkdir -p test_results

      # テストの実行
      - run:
          name: Run PHPUnit tests
          command: |
            php artisan test --testsuite Feature

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results

      - store_artifacts:
          path: coverage

workflows:
  main:
    jobs:
      - build_and_test